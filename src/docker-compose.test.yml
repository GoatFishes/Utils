version: "3.5"

services:
  # Kafka
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - 2181
    networks:
      - goatFish_backend

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - target: 9094
        published: 9094
        protocol: tcp
        mode: host
    environment:
      KAFKA_ADVERTISED_HOST_NAME: "kafka"
      KAFKA_ADVERTISED_PORT: "9092"
      KAFKA_CREATE_TOPICS: "backtest:1:1, requestState:1:1, bitmexPriceStream:1:1, positions:1:1, margin:1:1, orders:1:1, leverage:1:1"
      HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://_{HOSTNAME_COMMAND}:9094
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:delegated
    networks:
      - goatFish_backend

  # Database
  postgres:
    image: postgres:10-alpine
    restart: always
    container_name: postgres
    ports:
      - 5432
    volumes:
      - ./postgres/data:/var/lib/postgresql/data:delegated
      - ./postgres/scripts:/docker-entrypoint-initdb.d:delegated
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    networks:
      - goatFish_backend

  test:
    build: ./test
    container_name: test
    restart: always
    networks:
      - goatFish_backend
    volumes:
      - ./api:/usr/src/app/api:delegated
      - ./coverage:/usr/src/app/coverage:delegated
      - /var/run/docker.sock:/var/run/docker.sock:delegated

networks:
  goatFish_backend:
    external: true
